from matplotlib import pyplot as plt
import pandas as pd
import seaborn as sns

# Load in the data
netflix_stocks = pd.read_csv("NFLX.csv")
dowjones_stocks = pd.read_csv("DJI.csv")
netflix_stocks_quarterly = pd.read_csv("NFLX_daily_by_quarter.csv")

# Taking a look at the column names in the netflix_stocks dataframe 
netflix_stocks.head()

# Renaming the Adj Close column as it's a bit confusing if you don't read the documentation
# Adj Close represents the true closing price of the stock
netflix_stocks.rename(columns= {'Adj Close' : 'Price'}, inplace= True)
dowjones_stocks.rename(columns= {'Adj Close' : 'Price'}, inplace= True)
netflix_stocks_quarterly.rename(columns= {'Adj Close' : 'Price'}, inplace = True)

# Checking to see if the column names have changed
netflix_stocks.head()
dowjones_stocks.head()
netflix_stocks_quarterly.head()

# Understanding the distribution of the quarterly data
ax = sns.violinplot(
    data = netflix_stocks_quarterly,
    x = netflix_stocks_quarterly.Quarter,
    y = netflix_stocks_quarterly.Price
)

ax.set_title("Distribution of 2017 Netflix Stock Prices by Quarter")
plt.xlabel("Business Quarters in 2017")
plt.ylabel("Closing Stock Price")
plt.savefig("2017 Netflix by Quarter.png")
plt.show()


# EPS - Earnings per share
x_positions = [1, 2, 3, 4]
chart_labels = ["1Q2017","2Q2017","3Q2017","4Q2017"]
earnings_actual =[.4, .15,.29,.41]
earnings_estimate = [.37,.15,.32,.41 ]

plt.scatter(x_positions, earnings_actual, color= 'red', alpha= 0.5)
plt.scatter(x_positions, earnings_estimate, color= 'blue', alpha= 0.5)
plt.legend(["Actual", "Estimate"])

plt.xticks(x_positions, chart_labels)

plt.title("Earnings Per Share in Cents")
plt.savefig("Earnings Per Share.png")
plt.show()

# The metrics below are in billions of dollars -- provided by Codecademy
revenue_by_quarter = [2.79, 2.98,3.29,3.7]
earnings_by_quarter = [.0656,.12959,.18552,.29012]
quarter_labels = ["2Q2017","3Q2017","4Q2017", "1Q2018"]

# Revenue
n = 1 # This is our first dataset (out of 2)
t = 2 # Number of datasets
d = 4 # Number of sets of bars
w = 0.8 # Width of each bar
bars1_x = [t*element + w*n for element
             in range(d)]

# Plot the revenue data
plt.bar(bars1_x, revenue_by_quarter)

# Earnings
n = 2 # This is our second dataset (out of 2)
t = 2 # Number of datasets
d = 4 # Number of sets of bars
w = 0.8 # Width of each bar
bars2_x = [t*element + w*n for element
             in range(d)]

# Plot the earnings data
plt.bar(bars2_x, earnings_by_quarter)

# Creating new tick marks
middle_x = [ (a + b) / 2.0 for a, b in zip(bars1_x, bars2_x)]
plt.xticks(middle_x, quarter_labels)

# Creating a Legend
labels = ["Revenue", "Earnings"]
plt.legend(labels)

plt.title("Revenue vs. Earnings for Netflix")
plt.xlabel("Quarter")
plt.ylabel("Dollars (in Billions)")

plt.savefig("Revenue vs. Earnings.png")
plt.show()

# Creating list of months for the figure
months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"]

# Create subplot -- Looking for a side by side comparision meaning that we'd have 1 row, 2 columns (one for each chart)
# Left plot Netflix
ax1 = plt.subplot(1, 2, 1)
ax1.plot(netflix_stocks['Date'], netflix_stocks['Price'])

ax1.set_xticklabels(months, rotation= 'vertical')

ax1.set_title("Netflix Closing Price")
ax1.set_xlabel("Month")
ax1.set_ylabel("Stock Price")

# Right plot Dow Jones
ax2 = plt.subplot(1, 2, 2)
ax2.plot(dowjones_stocks['Date'], dowjones_stocks['Price'])

ax2.set_xticklabels(months, rotation= 'vertical')

ax2.set_title("Dow Jones Closing Price")
ax2.set_xlabel("Month")
ax2.set_ylabel("Stock Price")

plt.subplots_adjust(wspace= .5)
plt.savefig("Netflix vs. Dow.png")
plt.show()